service: hello-world-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: us-east-2
  stage: ${opt:stage, 'dev'}
  
  # Use existing IAM role created by Terraform
  iam:
    role: ${env:LAMBDA_ROLE_ARN, 'arn:aws:iam::${aws:accountId}:role/${self:provider.stage}-hello-world-role'}
  
  environment:
    ENVIRONMENT: ${self:provider.stage}
    LOG_LEVEL: ${self:provider.stage == 'prod' ? 'INFO' : 'DEBUG'}

functions:
  api:
    handler: main.handler
    name: ${self:provider.stage}-hello-world
    description: Hello World API with FastAPI
    
    # Deploy to an existing function created by Terraform
    deploymentSettings:
      preferLambdaVersion: true
    
    events:
      - httpApi:
          path: /
          method: get
      - httpApi:
          path: /hello
          method: get

package:
  individually: true
  patterns:
    - '!node_modules/**'
    - '!venv/**'
    - '!.env'
    - '!.env.example'
    - '!.git/**'
    - '!.github/**'
    - '!.terraform/**'
    - '!environments/**'
    - '!modules/**'
    - '!tests/**'

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: false
    layer: true